/*
 * Copyright 2015-2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.netflix.nebula:gradle-dependency-lock-plugin:10.2.0-rc.1"
    }
}

plugins {
    id 'nebula.plugin-plugin' version '14.5.0'
    id 'nebula.kotlin' version '1.3.61'
    id 'java-gradle-plugin'
}

dependencies {
    implementation platform("com.fasterxml.jackson:jackson-bom:2.9.9.20190807")

    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'com.netflix.nebula:nebula-gradle-interop:latest.release'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'com.netflix.nebula:nebula-dependency-recommender:9.0.1'

    testImplementation gradleTestKit()
    testRuntimeOnly 'com.netflix.nebula:gradle-dependency-lock-plugin:10.+'
}

apply from: 'gradle/idea.gradle'

description 'Gradle resolution rules plugin'

contacts {
    'dmthomas@gmail.com' {
        moniker 'Danny Thomas'
        github 'DanielThomas'
    }
    'nadavcoh@gmail.com' {
        moniker 'Nadav Cohen'
        github 'nadavc'
    }
    'rob.spieldenner@gmail.com' {
        moniker 'Rob Spieldenner'
        github 'rspieldenner'
    }
    'roberto@perezalcolea.info' {
        moniker 'Roberto Perez Alcolea'
        github 'rpalcolea'
    }
}

gradlePlugin {
    plugins {
        resolutionRules {
            id = 'nebubla.resolution-rules'
            implementationClass = 'nebula.plugin.resolutionrules.ResolutionRulesPlugin'
        }
    }
}

tasks.integrationTest {
    // alignment is determined via a system property, so we don't want to share state
    forkEvery = 1
}

pluginBundle {
    plugins {
        resolutionRules {
            id = 'nebula.resolution-rules'
            displayName = 'Gradle Resolution Rules plugin'
            description = project.description
            tags = ['nebula', 'resolve', 'resolution', 'rules']
        }
    }
}
